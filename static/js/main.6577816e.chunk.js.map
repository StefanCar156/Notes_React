{"version":3,"sources":["context.js","components/NoteThumbnail.js","components/NotesContainer.js","components/SearchInput.js","components/Options.js","components/Navbar.js","components/Overlay.js","components/TrashNoteThumbnail.js","components/Trash.js","components/Note.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","localStorage","getItem","JSON","parse","notes","setNotes","trashNotes","setTrashNotes","layout","setLayout","isOptionsActive","setIsOptionsActive","newTitle","setNewTitle","newText","setNewText","isEditingNote","setIsEditingNote","editingId","setEditingId","isTrashOpen","setIsTrashOpen","searchValue","setSearchValue","handleDeleteNote","noteId","filteredTrashNotes","filter","note","setItem","stringify","Provider","value","handleChangeLayout","handleAddNote","map","splice","indexOf","newDate","Date","newDay","getDate","newMonth","getMonth","newYear","getFullYear","updatedNote","noteTitle","noteText","noteDate","newNote","length","handleRemoveNote","removedNote","filteredNotes","handleRestoreNote","restoredNote","handleEditNote","handleGoBack","window","history","back","useGlobalContext","useContext","NoteThumbnail","props","className","onClick","to","style","textDecoration","color","NotesContainer","useEffect","filteredNotesArray","toLowerCase","includes","i","SearchInput","type","placeholder","onChange","e","target","Options","Navbar","Overlay","TrashNoteThumbnail","Trash","filteredTrashArray","Note","userSelect","pointerEvents","backgroundColor","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6577816e.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({children}) => {\r\n\r\n    // Get data from local storage\r\n    const getLocalStorage = () => {\r\n        let notes = localStorage.getItem('notes')\r\n        if (notes) {\r\n            return JSON.parse(localStorage.getItem('notes'))\r\n        } \r\n        else {\r\n          return []\r\n        }\r\n    }\r\n    const getLocalStorageTrash = () => {\r\n        let trashNotes = localStorage.getItem('trashNotes')\r\n        if (trashNotes) {\r\n            return JSON.parse(localStorage.getItem('trashNotes'))\r\n        } \r\n        else {\r\n          return []\r\n        }\r\n    }\r\n\r\n    const [notes, setNotes] = useState(getLocalStorage())\r\n    const [trashNotes, setTrashNotes] = useState(getLocalStorageTrash())\r\n    const [layout, setLayout] = useState('grid')\r\n    const [isOptionsActive, setIsOptionsActive] = useState(false)\r\n    const [newTitle, setNewTitle] = useState(\"\")\r\n    const [newText, setNewText] = useState(\"\")\r\n    const [isEditingNote, setIsEditingNote] = useState(false)\r\n    const [editingId, setEditingId] = useState(null)\r\n    const [isTrashOpen, setIsTrashOpen] = useState(false)\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n    // Change Layout\r\n    const handleChangeLayout = () => {\r\n        layout === 'grid' ? setLayout('list') : setLayout('grid')\r\n        setIsOptionsActive(false)\r\n    }\r\n\r\n    // Add note\r\n    const handleAddNote = () => {\r\n        // Check if user is editing existing note\r\n        if (isEditingNote) {\r\n            notes.map((note) => {\r\n                if (note.noteId === editingId) {\r\n                    notes.splice(notes.indexOf(note), 1)\r\n                    const newDate = new Date()\r\n                    const newDay = newDate.getDate()\r\n                    const newMonth = newDate.getMonth()\r\n                    const newYear = newDate.getFullYear()\r\n                    let updatedNote = {\r\n                        noteId: note.noteId,\r\n                        noteTitle: newTitle ? newTitle : 'Unnamed',\r\n                        noteText: newText,\r\n                        noteDate: `${newDay}.${newMonth}.${newYear}.`\r\n                    }\r\n                    setNotes([...notes, updatedNote])\r\n                    localStorage.setItem('notes', JSON.stringify([...notes, updatedNote]))\r\n                }\r\n            })\r\n            return\r\n        }\r\n        // Create new note\r\n        const newDate = new Date()\r\n        const newDay = newDate.getDate()\r\n        const newMonth = newDate.getMonth()\r\n        const newYear = newDate.getFullYear()\r\n\r\n        const newNote = {\r\n            noteId: notes.length + 1,\r\n            noteTitle : newTitle ? newTitle : 'Unnamed',\r\n            noteText : newText,\r\n            noteDate : `${newDay}.${newMonth}.${newYear}.`\r\n        }\r\n        // Prevent repeating id\r\n        if (notes.length === 0) {\r\n            newNote.noteId = 1\r\n        } else {\r\n            newNote.noteId = notes[notes.length - 1].noteId + 1\r\n        }\r\n        // Update local storage\r\n        setNotes([...notes, newNote])\r\n        localStorage.setItem('notes', JSON.stringify([...notes, newNote]))\r\n        // Reset state values\r\n        setNewText(\"\")\r\n        setNewTitle(\"\")\r\n    }\r\n\r\n    // Remove note from notes\r\n    const handleRemoveNote = (noteId) => {\r\n        // Determine removed note\r\n        let removedNote = notes.filter(note => note.noteId === noteId)[0]\r\n        let filteredNotes = notes.filter(note => note.noteId !== noteId)\r\n        // Remove note from notes\r\n        setNotes(filteredNotes)\r\n        localStorage.setItem('notes', JSON.stringify(filteredNotes))\r\n        // Give note new id in trash\r\n        if (trashNotes.length === 0) {\r\n            removedNote.noteId = 1\r\n        } else {\r\n            removedNote.noteId = trashNotes[trashNotes.length - 1].noteId + 1\r\n        }\r\n        // Add note to trash\r\n        setTrashNotes([...trashNotes, removedNote])\r\n        localStorage.setItem('trashNotes', JSON.stringify([...trashNotes, removedNote]))\r\n    }\r\n\r\n    // Remove note from trash\r\n    const handleDeleteNote = (noteId) => {\r\n        let filteredTrashNotes = trashNotes.filter(note => note.noteId !== noteId)\r\n        setTrashNotes(filteredTrashNotes)\r\n        localStorage.setItem('trashNotes', JSON.stringify(filteredTrashNotes))\r\n    }\r\n\r\n    // Restore note from trash\r\n    const handleRestoreNote = (noteId) => {\r\n        let restoredNote = trashNotes.filter(note => note.noteId === noteId)[0]\r\n        // Remove note from trash\r\n        handleDeleteNote(noteId)\r\n        // Give note new id\r\n        if (notes.length === 0) {\r\n            restoredNote.noteId = 1\r\n        } else {\r\n            restoredNote.noteId = notes[notes.length - 1].noteId + 1\r\n        }\r\n        // Restore note\r\n        setNotes([...notes, restoredNote])\r\n        localStorage.setItem('notes', JSON.stringify([...notes, restoredNote]))\r\n    }\r\n\r\n    // Edit note\r\n    const handleEditNote = (noteId, noteTitle, noteText) => {\r\n        setIsEditingNote(true)\r\n        setEditingId(noteId)\r\n        setNewTitle(noteTitle)\r\n        setNewText(noteText)\r\n    }\r\n\r\n    // Go back\r\n    const handleGoBack = () => {\r\n        window.history.back()\r\n        setNewTitle(\"\")\r\n        setNewText(\"\")\r\n    }\r\n\r\n    return <AppContext.Provider value={{layout, isOptionsActive, setIsOptionsActive, handleChangeLayout, notes, trashNotes, handleAddNote, newText, newTitle, setNewText, setNewTitle, handleRemoveNote, handleDeleteNote, handleRestoreNote, handleEditNote, isEditingNote, isTrashOpen, setIsTrashOpen, searchValue, setSearchValue, handleGoBack}}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }","import React from 'react'\r\nimport { RiDeleteBin2Fill } from \"react-icons/ri\";\r\nimport { useGlobalContext } from '../context';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NoteThumbnail = ({props}) => {\r\n    const { noteId, noteTitle, noteText, noteDate } = props\r\n    const { handleRemoveNote, handleEditNote } = useGlobalContext()\r\n    const linkStyle = {\r\n        textDecoration: \"none\",\r\n        color: \"#000\"\r\n    }\r\n    return (\r\n        <div className=\"note-thumbnail\">\r\n                <button className=\"remove-note-btn\" onClick={() => handleRemoveNote(noteId)} ><RiDeleteBin2Fill /></button>\r\n                <Link to=\"/note\" style={linkStyle} onClick={() => handleEditNote(noteId, noteTitle, noteText)}>\r\n                    <h1 className=\"thumbnail-title\">{noteTitle}</h1>\r\n                    <p className=\"thumbnail-content\">{noteText}</p>\r\n                    <p className=\"thumbnail-date\">{noteDate}</p>\r\n                </Link>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NoteThumbnail\r\n","import React, { useEffect } from 'react'\r\nimport NoteThumbnail from './NoteThumbnail'\r\nimport { AiFillPlusCircle } from 'react-icons/ai'\r\nimport { useGlobalContext } from '../context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotesContainer = () => {\r\n    const { layout, notes, setIsTrashOpen, searchValue } = useGlobalContext()\r\n    useEffect(() => {\r\n        setIsTrashOpen(false)\r\n    }, [])\r\n\r\n    let filteredNotesArray = notes\r\n\r\n    if (notes.length === 0) {\r\n        return <>\r\n            <p className=\"no-notes-notification\">No notes.</p>\r\n            <Link to=\"/note\">\r\n                <button className=\"open-new-note-btn\"><AiFillPlusCircle /></button>\r\n            </Link>\r\n        </>\r\n    }\r\n    if (searchValue !== \"\") {\r\n        filteredNotesArray = notes.filter((note) => note.noteTitle.toLowerCase().includes(searchValue.toLowerCase()) || note.noteText.toLowerCase().includes(searchValue.toLowerCase()) )\r\n    }\r\n\r\n    return (\r\n        <div className={`notes-container ${layout === 'list' && `notes-container-list`}`}>\r\n            {\r\n                filteredNotesArray.map((note, i) => {\r\n                    return <NoteThumbnail key={i} props={note} />\r\n                })\r\n            }\r\n            <Link to=\"/note\">\r\n                <button className=\"open-new-note-btn\"><AiFillPlusCircle /></button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesContainer\r\n","import React from 'react'\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst SearchInput = () => {\r\n    const { searchValue, setSearchValue } = useGlobalContext()\r\n    return (\r\n            <div className=\"search-container\">\r\n                <button className=\"search-btn\"><AiOutlineSearch /></button>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"search-input\" \r\n                    placeholder=\"Search notes\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                    />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport { Link } from 'react-router-dom'\r\n \r\nconst Options = () => {\r\n    const linkStyle = {\r\n        color: \"#000\",\r\n        textDecoration: \"none\"\r\n    }\r\n    const { layout, handleChangeLayout , isOptionsActive, setIsOptionsActive, isTrashOpen } = useGlobalContext()\r\n    return (\r\n        <ul className={`options-container ${isOptionsActive && `options-container-active`}`}>\r\n            <li onClick={() => handleChangeLayout()}>Show {layout === 'grid' ? `list` : `grid`}</li>\r\n            <Link to={`${isTrashOpen ? `/` : `/trash`}`} style={linkStyle} onClick={() => setIsOptionsActive(false)} >\r\n                <li>{isTrashOpen ? 'Notes' : 'Trash' }</li>\r\n            </Link>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Options\r\n","import React from 'react'\r\nimport SearchInput from './SearchInput'\r\nimport { BiDotsVerticalRounded } from 'react-icons/bi'\r\nimport { IoClose } from 'react-icons/io5'\r\nimport Options from './Options'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst Navbar = () => {\r\n    const { isOptionsActive,setIsOptionsActive } = useGlobalContext()\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <SearchInput />\r\n            <button className=\"nav-options-btn\" onClick={() => setIsOptionsActive(!isOptionsActive)}>{isOptionsActive ? <IoClose /> : <BiDotsVerticalRounded /> }</button>\r\n            <Options />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst Overlay = () => {\r\n    const { isOptionsActive } = useGlobalContext()\r\n    return (\r\n        <div className={`overlay ${isOptionsActive && `overlay-active`}`}></div>\r\n    )\r\n}\r\n\r\nexport default Overlay\r\n","import React from 'react'\r\nimport { RiDeleteBin2Fill, RiRepeat2Line } from \"react-icons/ri\";\r\nimport { useGlobalContext } from '../context';\r\n\r\nconst TrashNoteThumbnail = ({props}) => {\r\n    const { noteId, noteTitle, noteText, noteDate } = props\r\n    const { handleDeleteNote, handleRestoreNote } = useGlobalContext()\r\n    return (\r\n        <div className=\"trash-note-thumbnail\">\r\n            <button className=\"delete-note-btn\" onClick={() => handleDeleteNote(noteId)} ><RiDeleteBin2Fill /></button>\r\n            <button className=\"restore-note-btn\" onClick={() => handleRestoreNote(noteId)} ><RiRepeat2Line /></button>\r\n            <h1 className=\"thumbnail-title\">{noteTitle}</h1>\r\n            <p className=\"thumbnail-content\">{noteText}</p>\r\n            <p className=\"thumbnail-date\">{noteDate}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrashNoteThumbnail\r\n","import React, { useEffect } from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport TrashNoteThumbnail from './TrashNoteThumbnail'\r\n\r\nconst Trash = () => {\r\n    const { layout, trashNotes, isTrashOpen, setIsTrashOpen, searchValue } = useGlobalContext()\r\n    useEffect(() => {\r\n        setIsTrashOpen(true)\r\n    }, [])\r\n    let filteredTrashArray = trashNotes\r\n\r\n    if (trashNotes.length === 0) {\r\n        return <p className=\"no-notes-notification\">No notes in trash.</p>\r\n    }\r\n\r\n    if (searchValue !== \"\") {\r\n        filteredTrashArray = trashNotes.filter((note) => note.noteTitle.toLowerCase().includes(searchValue.toLowerCase()) || note.noteText.toLowerCase().includes(searchValue.toLowerCase()) )\r\n    }\r\n\r\n    return (\r\n        <div className={`trash-container ${layout === 'list' && `trash-container-list`}`}>\r\n            {\r\n                filteredTrashArray.map((note, i) => {\r\n                    return <TrashNoteThumbnail key={i} props={note} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trash\r\n","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Note = () => {\r\n    const { handleAddNote, newText, newTitle, setNewText, setNewTitle, isEditingNote, handleGoBack } = useGlobalContext()\r\n    const unclickableBtnStyle = {\r\n        pointerEvents: \"none\",\r\n        backgroundColor: \"rgb(255, 215, 82)\"\r\n    }\r\n    const unclickableLinkStyle = {\r\n        userSelect: \"none\",\r\n        pointerEvents: \"none\",\r\n        backgroundColor: \"rgb(255, 215, 82)\"\r\n    }\r\n    return (\r\n        <div className=\"note\">\r\n            <button className=\"back-btn\" onClick={() => handleGoBack()}><BiArrowBack /></button>\r\n            <input type=\"text\" className=\"note-title\" placeholder=\"Title\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n            <div className=\"note-content\">\r\n                <textarea placeholder=\"Note...\" className=\"note-text\" value={newText} onChange={(e) => setNewText(e.target.value)}></textarea>\r\n            </div>\r\n            <Link to=\"/\" style={!newText ? unclickableLinkStyle : null } >\r\n                <button className=\"add-note-btn\" style={!newText ? unclickableBtnStyle : null} onClick={() => handleAddNote()} >{isEditingNote ? 'Save changes' : 'Add note'}</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import './App.css';\nimport NotesContainer from './components/NotesContainer';\nimport Navbar from './components/Navbar';\nimport Overlay from './components/Overlay';\nimport Trash from './components/Trash';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Note from './components/Note';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={NotesContainer} />\n            <Route path=\"/trash\" exact component={Trash} />\n            <Route path=\"/note\" exact component={Note} />\n          </Switch>\n          <Overlay />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AppProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}